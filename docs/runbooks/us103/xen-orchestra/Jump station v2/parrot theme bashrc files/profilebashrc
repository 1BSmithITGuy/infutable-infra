#  Bryan Smith
#  06/30/2025
#  -----------------------------------------------------------------------------------------------------------------------------------------
#  This is for user profile .bashrc shell customziations.  
#  replace these files:  /etc/skel/.bashrc, and any exuisting user profiles .bashrc
#  07/06/2025 - added kubectl aliases
#  08/05/2025 - added orchestration aliases
#  08/06/2025 - added kubectl context to ps1
#  -----------------------------------------------------------------------------------------------------------------------------------------


# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)

# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# History settings
HISTCONTROL=ignoreboth
shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s checkwinsize

# lesspipe setup
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set chroot name if present
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# ðŸŸ¢ Parrot-style colored prompt
if [ "$TERM" != "dumb" ]; then
  PS1="\[\033[0;31m\]\342\224\214\342\224\200\$([[ \$? != 0 ]] && echo \"[\[\033[0;31m\]\342\234\227\[\033[0;37m\]]\342\224\200\")[$(if [[ \${EUID} == 0 ]]; then echo '\[\033[01;31m\]root\[\033[01;33m\]@\[\033[01;96m\]\h'; else echo '\[\033[0;39m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h'; fi)\[\033[0;31m\]]\342\224\200[\[\033[0;32m\]\w\[\033[0;31m\]]\n\[\033[0;31m\]\342\224\224\342\224\200\342\224\200\342\225\274 \[\033[0m\]\[\e[01;33m\]\\$\[\e[0m\]"
fi

# Optional terminal title bar
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# ðŸŸ¡ Color support and aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Optional: alert for long-running jobs
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" \
"$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Load personal aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

#  kubectl aliases (BSS)
  alias k='kubectl'
  source /etc/bash_completion
  source <(kubectl completion bash)
  complete -o default -F __start_kubectl k

  alias kgp='kubectl get pods'
  alias kc='kubectx'
  alias kn='kubens'

#  git filesystem navigation shortcut aliases (BSS)
  alias bsdev='cd /srv/repos/Homelab/US103/dev/'
  alias bsprod='cd /srv/repos/Homelab/US103/prod/'
  alias bsdevorc='cd /srv/repos/Homelab/US103/dev/orchestration'

#  Orchestration aliases (BSS)
  alias bsk8start='/srv/repos/Homelab/US103/prod/orchestration/bin/us103-start-k8s.sh'
  alias bsk8shut='/srv/repos/Homelab/US103/prod/orchestration/bin/us103-shutdown-k8s.sh'
  alias bs103shut='/srv/repos/Homelab/US103/prod/orchestration/bin/us103-shutdown-the-world.sh'

# Bash completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


# >>> Kube context in Parrot prompt (minimal, cached, theme-safe) >>>
# Fast kube context with colors (no \[ \] in output; real ESC only)
KUBE_PS1_CACHE=""; KUBE_PS1_LASTMOD=0
kube_ps1_fast() {
  local kubeconfig_file="${KUBECONFIG:-$HOME/.kube/config}"
  if [ ! -f "$kubeconfig_file" ]; then KUBE_PS1_CACHE=""; echo ""; return; fi

  local current_mod; current_mod=$(stat -c %Y "$kubeconfig_file" 2>/dev/null)
  if [ "$current_mod" != "$KUBE_PS1_LASTMOD" ] || [ -z "$KUBE_PS1_CACHE" ]; then
    KUBE_PS1_CACHE=$(kubectl config current-context 2>/dev/null)
    KUBE_PS1_LASTMOD="$current_mod"
  fi

  local esc=$'\e'
  local reset="${esc}[0m"
  local orange="${esc}[38;5;208m"
  local yellow="${esc}[38;5;226m"
  local italic="${esc}[3m"
  local noitalic="${esc}[23m"

  local color=""
  case "$KUBE_PS1_CACHE" in
    us103-k3s01)     color="$orange" ;;
    us103-kubeadm01) color="$yellow" ;;
  esac

  [ -n "$KUBE_PS1_CACHE" ] && \
    printf "%s{%s%s%s}%s" "$color" "$italic" "$KUBE_PS1_CACHE" "$noitalic" "$reset"
}

# Ensure there is no colon after \h in the [user@host] block
PS1="$(printf '%s' "$PS1" | sed -E 's/(\\\[\\033\[01;96m\\\]\\h):/\1/')"

# Insert :{context} right after \h (inside the first bracket), preserving colors
PS1="$(printf '%s' "$PS1" | sed -E 's/(\\\[\\033\[01;96m\\\]\\h)/\1:$(kube_ps1_fast)/')"
# <<< Kube context in Parrot prompt <<<

# Error marker in prompt: show [âœ—] when last command failed (keeps Parrot style)
ps1_err() {
  [[ $? != 0 ]] && printf '[\[\033[0;31m\]âœ—\[\033[0;37m\]]\u2500'
}
corner=$'\u250C\u2500'   # â”Œâ”€
PS1="${PS1/$corner/$corner\$(ps1_err)}"

